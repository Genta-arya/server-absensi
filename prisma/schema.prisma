generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              String          @id @default(uuid())
  nim             String          @unique
  name            String?
  email           String?         @unique
  password        String
  isLogin         Boolean         @default(false)
  token           String?
  avatar          String?         @default("https://cdn-icons-png.flaticon.com/512/3135/3135715.png")
  role            Role            @default(MHS)
   createdAt DateTime @default(now())
  Group           GroupKegiatan[] @relation("GroupMahasiswa")
  createdKegiatan Kegiatan[]      @relation("KegiatanCreator")
  FormAgenda      FormAgenda[]
}

model Kegiatan {
  id           String          @id @default(uuid())
  Kd_kegiatan  String          @unique
  nama         String
  deskripsi    String          @db.Text
  waktumulai   DateTime
  waktuselesai DateTime
  creatorId    String
  visible      Boolean         @default(true)
   createdAt DateTime @default(now())
  creator      User            @relation("KegiatanCreator", fields: [creatorId], references: [id])
  groups       GroupKegiatan[] @relation("KegiatanGroups")
}

model GroupKegiatan {
  id         String   @id @default(uuid())
  nama_grup  String   @unique
  mahasiswa  User[]   @relation("GroupMahasiswa")
  kegiatan   Kegiatan @relation("KegiatanGroups", fields: [kegiatanId], references: [id])
  kegiatanId String
  creatorId String
   createdAt DateTime @default(now())
  Agenda     Agenda[] @relation("AgendaGroups")
}

model Agenda {
  id         String        @id @default(uuid())
  createdId  String
  groupId    String
  deskripsi  String?       @db.Text
  idUser     String?
  status     Boolean?     
  nama       String
  createdAt DateTime @default(now())
  status_berkas Boolean @default(false)
  group      GroupKegiatan @relation("AgendaGroups", fields: [groupId], references: [id])
  FormAgenda FormAgenda[]
}

model FormAgenda {
  id        String   @id @default(uuid())
  agendaId  String?
  kegiatanId String?
  mhsId     String?
  status    Boolean  
  detail    String?  @db.Text
  gps       String?
  tanggal   DateTime?
  gambar1   String?
  gambar2   String?
  gambar1_b64 String? @db.LongText
  gambar2_b64 String? @db.LongText
   createdAt DateTime @default(now())
  agenda    Agenda?   @relation(fields: [agendaId], references: [id])
  mahasiswa User?     @relation(fields: [mhsId], references: [id])
  
 
}

model ErrorLog {
  id         Int      @id @default(autoincrement())
  message    String @db.Text
  detail     String @db.Text
  statusCode Int      // Kolom status code
  timestamp  DateTime @default(now())
}



enum Role {
  MHS
  DOSEN
  ADMIN
}
